---
import { Image } from "astro:assets";
import p1 from "../assets/1.webp";
import p2 from "../assets/2.webp";
import p3 from "../assets/3.webp";
import p4 from "../assets/4.webp";
import p5 from "../assets/5.webp";
import p6 from "../assets/6.webp";

const products = [
    {
        id: 1,
        title: "Dual-Port Bit Driver",
        subtitle: "Cobalt blue CNC finish",
        price: "$59",
        image: p1,
    },
    {
        id: 2,
        title: "Analog Audio Control Hub",
        subtitle: "Soft matte with ring LEDs",
        price: "$79",
        image: p2,
    },
    {
        id: 3,
        title: "Laser Range Unit",
        subtitle: "Black anodized edge + sensor",
        price: "$110",
        image: p3,
    },
    {
        id: 4,
        title: "Smart Object Desk Set",
        subtitle: "Minimalist modular kit",
        price: "$129",
        image: p4,
    },
    {
        id: 5,
        title: "Modular Synth Box",
        subtitle: "Magnetic knobs, dual input",
        price: "$149",
        image: p5,
    },
    {
        id: 6,
        title: "Compact Action Camera",
        subtitle: "Transparent shell, neon ring",
        price: "$189",
        image: p6,
    },
];
---

<!-- Netlify Forms Hidden Form -->
<form name="orders" netlify hidden>
    <input type="text" name="name" />
    <input type="email" name="email" />
    <input type="tel" name="phone" />
    <textarea name="message"></textarea>
    <input type="text" name="selected-products" />
    <input type="text" name="selected-products-details" />
    <input type="text" name="total-amount" />
    <input type="text" name="order-number" />
</form>

<section>
    <div class="grid grid-cols-1 gap-6 lg:gap-y-24 md:grid-cols-2 lg:grid-cols-3 py-12">
        {products.map((product) => (
                <figure class="relative cursor-pointer product-item" data-product-id={product.id}>
                    <Image
                            width="800"
                            height="800"
                            alt={product.title}
                            src={product.image}
                            class="w-full rounded-3xl shadow aspect-12/9 object-cover object-center transition-all duration-300 hover:shadow-lg"
                    />
                    <div class="mt-2 flex justify-between px-6">
                        <div>
                            <p class="mt-1 text-sm font-medium text-base-900">
                                {product.subtitle}
                            </p>
                            <h3 class="text-xs text-base-500">{product.title}</h3>
                        </div>
                        <p class="text-base text-orange-600">{product.price}</p>
                    </div>
                    <div class="selection-indicator absolute top-2 right-2 w-8 h-8 bg-orange-600 rounded-full flex items-center justify-center opacity-0 transition-opacity duration-300">
                        <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                        </svg>
                    </div>
                </figure>
        ))}
    </div>

    <!-- Ausgewählte Bilder anzeigen -->
    <div id="selected-items" class="mt-8 hidden">
        <h3 class="text-lg font-semibold mb-4">Ausgewählte Bilder:</h3>
        <div id="selected-list" class="flex flex-wrap gap-4 mb-6"></div>
        <div id="total-amount" class="text-lg font-semibold mb-4"></div>
    </div>

    <!-- Kontaktformular -->
    <div id="contact-form" class="mt-8 max-w-md mx-auto hidden">
        <h3 class="text-lg font-semibold mb-4">Ihre Kontaktdaten:</h3>
        <form id="order-form" class="space-y-4">
            <div>
                <label for="name" class="block text-sm font-medium text-base-700">Name *</label>
                <input type="text" id="name" name="name" required
                       class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500 px-3 py-2 border">
            </div>
            <div>
                <label for="email" class="block text-sm font-medium text-base-700">E-Mail *</label>
                <input type="email" id="email" name="email" required
                       class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500 px-3 py-2 border">
            </div>
            <div>
                <label for="phone" class="block text-sm font-medium text-base-700">Telefon</label>
                <input type="tel" id="phone" name="phone"
                       class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500 px-3 py-2 border">
            </div>
            <div>
                <label for="message" class="block text-sm font-medium text-base-700">Nachricht (optional)</label>
                <textarea id="message" name="message" rows="3"
                          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500 px-3 py-2 border"></textarea>
            </div>
            <button type="submit" id="submit-btn"
                    class="w-full bg-orange-600 text-white py-2 px-4 rounded-md hover:bg-orange-700 transition-colors duration-300">
                Anfrage senden
            </button>
        </form>
    </div>

    <!-- Success Message -->
    <div id="success-message" class="mt-8 max-w-md mx-auto hidden">
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded">
            <strong class="font-bold">Erfolgreich!</strong>
            <span class="block sm:inline">Ihre Anfrage wurde erfolgreich gesendet. Bestellnummer: <span id="order-number"></span></span>
        </div>
    </div>
</section>

<script>
    interface Product {
        id: number;
        title: string;
        subtitle: string;
        price: string;
        image: string;
    }

    const products: Product[] = [
        { id: 1, title: "Dual-Port Bit Driver", subtitle: "Cobalt blue CNC finish", price: "$59", image: "" },
        { id: 2, title: "Analog Audio Control Hub", subtitle: "Soft matte with ring LEDs", price: "$79", image: "" },
        { id: 3, title: "Laser Range Unit", subtitle: "Black anodized edge + sensor", price: "$110", image: "" },
        { id: 4, title: "Smart Object Desk Set", subtitle: "Minimalist modular kit", price: "$129", image: "" },
        { id: 5, title: "Modular Synth Box", subtitle: "Magnetic knobs, dual input", price: "$149", image: "" },
        { id: 6, title: "Compact Action Camera", subtitle: "Transparent shell, neon ring", price: "$189", image: "" },
    ];

    let selectedProducts: number[] = [];

    function calculateTotal(): number {
        return selectedProducts.reduce((total, id) => {
            const product = products.find(p => p.id === id);
            if (product) {
                const price = parseFloat(product.price.replace('$', ''));
                return total + price;
            }
            return total;
        }, 0);
    }

    function toggleSelection(productId: number): void {
        const index = selectedProducts.indexOf(productId);
        if (index > -1) {
            selectedProducts.splice(index, 1);
        } else {
            selectedProducts.push(productId);
        }
        updateUI();
    }

    function updateUI(): void {
        // Update selection indicators
        document.querySelectorAll('.product-item').forEach(item => {
            const productId = parseInt(item.getAttribute('data-product-id') || '0');
            const indicator = item.querySelector('.selection-indicator');
            if (selectedProducts.includes(productId)) {
                item.classList.add('selected');
                indicator?.classList.remove('opacity-0');
            } else {
                item.classList.remove('selected');
                indicator?.classList.add('opacity-0');
            }
        });

        // Update selected items display
        const selectedItemsDiv = document.getElementById('selected-items');
        const selectedList = document.getElementById('selected-list');
        const totalAmountDiv = document.getElementById('total-amount');
        const contactForm = document.getElementById('contact-form');

        if (selectedProducts.length > 0) {
            selectedItemsDiv?.classList.remove('hidden');
            contactForm?.classList.remove('hidden');

            if (selectedList) {
                selectedList.innerHTML = selectedProducts.map(id => {
                    const product = products.find(p => p.id === id);
                    return `<div class="bg-gray-100 p-2 rounded text-sm">${product?.title} - ${product?.price}</div>`;
                }).join('');
            }

            const total = calculateTotal();
            if (totalAmountDiv) {
                totalAmountDiv.textContent = `Gesamtbetrag: $${total.toFixed(2)}`;
            }
        } else {
            selectedItemsDiv?.classList.add('hidden');
            contactForm?.classList.add('hidden');
        }
    }

    // Event listeners
    document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('.product-item').forEach(item => {
            item.addEventListener('click', () => {
                const productId = parseInt(item.getAttribute('data-product-id') || '0');
                toggleSelection(productId);
            });
        });

        // Form submission
        document.getElementById('order-form')?.addEventListener('submit', async (e) => {
            e.preventDefault();

            const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;
            const originalText = submitBtn.textContent;
            submitBtn.textContent = 'Wird gesendet...';
            submitBtn.disabled = true;

            const formData = new FormData(e.target as HTMLFormElement);
            const selectedProductsDetails = selectedProducts.map(id => products.find(p => p.id === id));
            const totalAmount = calculateTotal();

            const orderData = {
                name: formData.get('name'),
                email: formData.get('email'),
                phone: formData.get('phone'),
                message: formData.get('message'),
                selectedProducts: selectedProducts,
                selectedProductsDetails: selectedProductsDetails,
                totalAmount: totalAmount
            };

            try {
                const response = await fetch('/.netlify/functions/orderFunc', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(orderData)
                });

                const result = await response.json();

                if (response.ok) {
                    // Erfolgsmeldung anzeigen
                    document.getElementById('contact-form')?.classList.add('hidden');
                    document.getElementById('success-message')?.classList.remove('hidden');
                    document.getElementById('order-number')!.textContent = result.orderNumber;

                    // Reset form
                    (e.target as HTMLFormElement).reset();
                    selectedProducts = [];
                    updateUI();
                } else {
                    alert('Fehler beim Senden der Anfrage: ' + result.error);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Fehler beim Senden der Anfrage. Bitte versuchen Sie es erneut.');
            } finally {
                submitBtn.textContent = originalText;
                submitBtn.disabled = false;
            }
        });
    });
</script>